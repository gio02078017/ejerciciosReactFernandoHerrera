{"version":3,"sources":["redux/types.js","redux/reducers/uiReducer.js","redux/reducers/calendarReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","redux/actions/events.js","redux/actions/auth.js","screens/auth/LoginScreen.js","components/ui/Navbar.js","redux/actions/ui.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","screens/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","console","log","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","uiOpenModal","AddNewFab","DeleteEventFab","getState","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","evento","_id","eventStartAddNew","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.350ef620.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    \r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from 'moment';\r\n\r\nimport { types } from '../types';\r\n\r\n/*const initialState = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add( 2, 'hours' ).toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar el pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Fernando'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n};*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n    \r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from '../types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { types } from \"../types\";\r\nimport { fetchConToken } from '../../helpers/fetch';\r\nimport { prepareEvents } from '../../helpers/prepareEvents';\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        //se utiliza la propiedad getState, para optener el estado de redux y de este sacar el objecto auth\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            console.log(body)\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( event );\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../../helpers/fetch';\r\nimport { types } from '../types';\r\nimport { eventLogout } from '../actions/events';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        console.log(\"startLogin resp \", resp);\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        console.log(\"startRegister body \", body);\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../redux/actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'fernando@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"handleRegister formRegisterValues \", formRegisterValues);\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\r\n        }\r\n        console.log('?')\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../redux/actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}","import { types } from '../types';\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../redux/actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../redux/actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../redux/actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        } else {\r\n            dispatch( eventStartAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '123',\r\n                    name: 'Fernando'\r\n                }\r\n            }) );\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\n\r\nimport { Navbar } from '../../components/ui/Navbar';\r\nimport { AddNewFab } from '../../components/ui/AddNewFab';\r\nimport { DeleteEventFab } from '../../components/ui/DeleteEventFab';\r\n\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from '../../components/calendar/CalendarEvent';\r\nimport { CalendarModal } from '../../components/calendar/CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../redux/actions/ui';\r\nimport { eventSetActive, eventStartLoading } from '../../redux/actions/events';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e)\r\n        //dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7': '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    console.log(\"CalendarScreen events \",events);\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal />\r\n\r\n            <AddNewFab/>\r\n\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n  \r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../screens/auth/LoginScreen';\r\nimport { CalendarScreen } from '../screens/calendar/CalendarScreen';\r\nimport { startChecking } from '../redux/actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    //doble negacion de un string da como resultado true si es vacio da false por esto la doble negacion de !!uid\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />   \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n/*import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../screens/auth/LoginScreen';\r\nimport { CalendarScreen } from '../screens/calendar/CalendarScreen';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={ LoginScreen } />      \r\n                    <Route exact path=\"/\" component={ CalendarScreen } />\r\n\r\n                    <Redirect to=\"/\" />   \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}*/","\nimport React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}